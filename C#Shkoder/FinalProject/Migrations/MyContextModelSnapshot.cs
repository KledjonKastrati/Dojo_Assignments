// <auto-generated />
using System;
using FinalProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FinalProject.Models.Instructor", b =>
                {
                    b.Property<int>("InstructorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("InstructorAge")
                        .HasColumnType("int");

                    b.Property<string>("InstructorFirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("InstructorLastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordConfirm")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Specialized")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("InstructorId");

                    b.ToTable("Instructor");
                });

            modelBuilder.Entity("FinalProject.Models.Pjesemarrje", b =>
                {
                    b.Property<int>("PjesemarrjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("InstructorId")
                        .HasColumnType("int");

                    b.Property<int?>("ProgramiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PjesemarrjeId");

                    b.HasIndex("InstructorId");

                    b.HasIndex("ProgramiId");

                    b.HasIndex("UserId");

                    b.ToTable("Pjesemarrjet");
                });

            modelBuilder.Entity("FinalProject.Models.Programi", b =>
                {
                    b.Property<int>("ProgramiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double?>("AverageRating")
                        .HasColumnType("double");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("InstructorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("TotalRaters")
                        .HasColumnType("int");

                    b.Property<int?>("TotalRatingValues")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("YoutubeUrl")
                        .HasColumnType("longtext");

                    b.HasKey("ProgramiId");

                    b.HasIndex("InstructorId");

                    b.ToTable("Programi");
                });

            modelBuilder.Entity("FinalProject.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FinalProject.Models.Pjesemarrje", b =>
                {
                    b.HasOne("FinalProject.Models.Instructor", null)
                        .WithMany("Pjesemarrjet")
                        .HasForeignKey("InstructorId");

                    b.HasOne("FinalProject.Models.Programi", "Programi")
                        .WithMany("Pjesemarresit")
                        .HasForeignKey("ProgramiId");

                    b.HasOne("FinalProject.Models.User", "Pjesemarres")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Pjesemarres");

                    b.Navigation("Programi");
                });

            modelBuilder.Entity("FinalProject.Models.Programi", b =>
                {
                    b.HasOne("FinalProject.Models.Instructor", "Creator")
                        .WithMany("Programi")
                        .HasForeignKey("InstructorId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("FinalProject.Models.Instructor", b =>
                {
                    b.Navigation("Pjesemarrjet");

                    b.Navigation("Programi");
                });

            modelBuilder.Entity("FinalProject.Models.Programi", b =>
                {
                    b.Navigation("Pjesemarresit");
                });
#pragma warning restore 612, 618
        }
    }
}
